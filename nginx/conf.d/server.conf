server {
    listen 80;
    listen [::]:80;

    server_name jibberjabberg2.ml;
    server_tokens off;

    location / {
        return 301 https://jibberjabberg2.ml$request_uri;
    }
}

server {

    proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    proxy_set_header Host $host; # to forward the original host requested by the client

    add_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    add_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    add_header Host $host; # to forward the original host requested by the client

    location / {
        root /usr/share/nginx/html;
    }

    location /follow/ {
        proxy_pass http://follow-api:8080/follow/;
    }

    location /post/ {
        proxy_set_header Host $host; # to forward the original host requested by the client
        proxy_pass http://post-api:8080/post/;
    }

    location /user/ {
        proxy_set_header Host $host; # to forward the original host requested by the client
        proxy_pass http://post-api:8080/user/;
    }

    location /auth/ {
        proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
        proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
        proxy_set_header Host $host; # to forward the original host requested by the client
        proxy_pass http://keycloak:8080/auth/;
    }

    location /admin {
            proxy_pass http://keycloak:8080/;
        }

    location /admin/* {
            proxy_pass http://keycloak:8080/;
        }
}